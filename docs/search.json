[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Jalal El Hazzat",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/my-first-post/index.html",
    "href": "posts/my-first-post/index.html",
    "title": "My First Post",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My First Quarto Blog",
    "section": "",
    "text": "Rotation Matrix\n\n\n\nmultibody\n\nreference frame\n\nrotation\n\n\n\nA post about sympy generated rotation matrix\n\n\n\n\n\n\nJun 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\nnews\n\ncode\n\nanalysis\n\n\n\n\n\n\n\nHarlow Malloc\n\n\nJun 10, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy First Post\n\n\n\nmath\n\nspace\n\ncontrol\n\n\n\n\n\n\n\nJalal El Hazzat\n\n\nJun 8, 2025\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\nnews\n\n\n\n\n\n\n\nTristan O’Malley\n\n\nJun 7, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/rotation-matrix/sympy-rotation-quarto.html",
    "href": "posts/rotation-matrix/sympy-rotation-quarto.html",
    "title": "Rotation Matrix",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\npd.set_option(\"display.max_rows\", 1000)\n\nimport sympy as sm\nimport sympy.physics.mechanics as me\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n\n\nsm.init_printing()\n\n\ntheta, alpha = sm.symbols('theta, alpha')\n\nB_C_A = sm.Matrix([\n    [sm.cos(theta), sm.sin(theta), 0],\n    [-sm.sin(theta), sm.cos(theta), 0],\n    [0, 0, 1],\n])\n\nC_C_B = sm.Matrix([\n    [1, 0, 0],\n    [0, sm.cos(alpha), sm.sin(alpha)],\n    [0, -sm.sin(alpha), sm.cos(alpha)],\n])\n\nB_C_A\n\nC_C_B\n\n\\(\\displaystyle \\left[\\begin{matrix}\\cos{\\left(\\theta \\right)} & \\sin{\\left(\\theta \\right)} & 0\\\\- \\sin{\\left(\\theta \\right)} & \\cos{\\left(\\theta \\right)} & 0\\\\0 & 0 & 1\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}1 & 0 & 0\\\\0 & \\cos{\\left(\\alpha \\right)} & \\sin{\\left(\\alpha \\right)}\\\\0 & - \\sin{\\left(\\alpha \\right)} & \\cos{\\left(\\alpha \\right)}\\end{matrix}\\right]\\)\n\n\n\nC_C_A = C_C_B * B_C_A\n\nC_C_A\n\n\\(\\displaystyle \\left[\\begin{matrix}\\cos{\\left(\\theta \\right)} & \\sin{\\left(\\theta \\right)} & 0\\\\- \\sin{\\left(\\theta \\right)} \\cos{\\left(\\alpha \\right)} & \\cos{\\left(\\alpha \\right)} \\cos{\\left(\\theta \\right)} & \\sin{\\left(\\alpha \\right)}\\\\\\sin{\\left(\\alpha \\right)} \\sin{\\left(\\theta \\right)} & - \\sin{\\left(\\alpha \\right)} \\cos{\\left(\\theta \\right)} & \\cos{\\left(\\alpha \\right)}\\end{matrix}\\right]\\)\n\n\n\nA = me.ReferenceFrame('A')\nB = me.ReferenceFrame('B')\nC = me.ReferenceFrame('C')\n\n\nA.x, A.y, A.z\n\n\\(\\displaystyle \\left( \\mathbf{\\hat{a}_x}, \\  \\mathbf{\\hat{a}_y}, \\  \\mathbf{\\hat{a}_z}\\right)\\)\n\n\n\nB.orient_axis(A, theta, A.z)\nB.dcm(A)\n\n\\(\\displaystyle \\left[\\begin{matrix}\\cos{\\left(\\theta \\right)} & \\sin{\\left(\\theta \\right)} & 0\\\\- \\sin{\\left(\\theta \\right)} & \\cos{\\left(\\theta \\right)} & 0\\\\0 & 0 & 1\\end{matrix}\\right]\\)\n\n\n\nC.orient_axis(B, alpha, B.x)\nC.dcm(B)\n\n\\(\\displaystyle \\left[\\begin{matrix}1 & 0 & 0\\\\0 & \\cos{\\left(\\alpha \\right)} & \\sin{\\left(\\alpha \\right)}\\\\0 & - \\sin{\\left(\\alpha \\right)} & \\cos{\\left(\\alpha \\right)}\\end{matrix}\\right]\\)\n\n\n\nC.dcm(A)\n\n\\(\\displaystyle \\left[\\begin{matrix}\\cos{\\left(\\theta \\right)} & \\sin{\\left(\\theta \\right)} & 0\\\\- \\sin{\\left(\\theta \\right)} \\cos{\\left(\\alpha \\right)} & \\cos{\\left(\\alpha \\right)} \\cos{\\left(\\theta \\right)} & \\sin{\\left(\\alpha \\right)}\\\\\\sin{\\left(\\alpha \\right)} \\sin{\\left(\\theta \\right)} & - \\sin{\\left(\\alpha \\right)} \\cos{\\left(\\theta \\right)} & \\cos{\\left(\\alpha \\right)}\\end{matrix}\\right]\\)\n\n\n\nA = me.ReferenceFrame('A')\nC = me.ReferenceFrame('C')\n\n\npsi, theta, phi = sm.symbols('psi, theta, varphi')\n\n\nC.orient_body_fixed(A, (psi, theta, phi), 'ZXZ')\nC.dcm(A)\n\n\\(\\displaystyle \\left[\\begin{matrix}- \\sin{\\left(\\psi \\right)} \\sin{\\left(\\varphi \\right)} \\cos{\\left(\\theta \\right)} + \\cos{\\left(\\psi \\right)} \\cos{\\left(\\varphi \\right)} & \\sin{\\left(\\psi \\right)} \\cos{\\left(\\varphi \\right)} + \\sin{\\left(\\varphi \\right)} \\cos{\\left(\\psi \\right)} \\cos{\\left(\\theta \\right)} & \\sin{\\left(\\theta \\right)} \\sin{\\left(\\varphi \\right)}\\\\- \\sin{\\left(\\psi \\right)} \\cos{\\left(\\theta \\right)} \\cos{\\left(\\varphi \\right)} - \\sin{\\left(\\varphi \\right)} \\cos{\\left(\\psi \\right)} & - \\sin{\\left(\\psi \\right)} \\sin{\\left(\\varphi \\right)} + \\cos{\\left(\\psi \\right)} \\cos{\\left(\\theta \\right)} \\cos{\\left(\\varphi \\right)} & \\sin{\\left(\\theta \\right)} \\cos{\\left(\\varphi \\right)}\\\\\\sin{\\left(\\psi \\right)} \\sin{\\left(\\theta \\right)} & - \\sin{\\left(\\theta \\right)} \\cos{\\left(\\psi \\right)} & \\cos{\\left(\\theta \\right)}\\end{matrix}\\right]\\)"
  }
]